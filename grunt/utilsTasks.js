module.exports = UtilsTasks;

/**
 * Common grunt task presets
 * available commands :
 * 	- add_comment:allGeneratedFiles
 * 	- add_comment:appGeneratedFiles
 * 	- add_comment:serverGeneratedFiles
 * 	- add_comment:webSrcGeneratedFiles
 * 	- add_comment:dist
 * 	- add_comment:generatedFromTarget
 * 	- clean:allGeneratedFiles
 * 	- clean:allGeneratedJSFiles
 * 	- clean:allGeneratedCSSFiles
 * 	- clean:webSrcGeneratedFiles
 * 	- clean:appGeneratedFiles
 * 	- clean:serverGeneratedFiles
 * 	- clean:webDist
 * 	- clean:doc
 * 	- clean:generatedFromTarget
 * 	- apidoc:app
 * 	- copy:webSrcFontsToWebDist
 * 	
 * @param {Object|Grunt} grunt Grunt instance
 */
function UtilsTasks(grunt) {

	var configuration = {};

	/*ADD COMMENT*/
		configuration.add_comment = {};
		configuration.add_comment.allGeneratedFiles = {
			options: {
				comments: ['Autogenerated, do not edit. All changes will be undone.', new Date()],
				prepend: true,
				syntaxes: {
					'.js': ['/*', '*/'],
					'.css': ['/*', '*/'],
					'.jade': ['//-'],
					'.tpl.jade': ['//-']
				}
			},
			files: [{
				expand: true,
				cwd: global.paths.app,
				src: ['!**/*.es6', '**/*.js'],
				dest: global.paths.app
			}, {
				expand: true,
				cwd: global.paths.server,
				src: ['!**/*.es6', '**/*.js',],
				dest: global.paths.server
			}, {
				expand: true,
				cwd: global.paths.webSrc,
				src: ['!**/*.es6', '!**/*.scss', '!**/*.jade', '**/*.js', '**/*.css', '!assets/javascripts/libraries/**/*'],
				dest: global.paths.webSrc
			}, {
				expand: true,
				cwd: global.paths.webDist,
				src: ['!**/*.es6', '!**/*.scss', '**/*.jade', '**/*.js', '**/*.css', '!assets/javascripts/libraries/**/*'],
				dest: global.paths.webDist
			}]
		};
		configuration.add_comment.appGeneratedFiles = {
			options: {
				comments: ['Autogenerated, do not edit. All changes will be undone.', new Date()],
				prepend: true,
				syntaxes: {
					'.js': ['/*', '*/'],
					'.css': ['/*', '*/']
				}
			},
			files: [{
				expand: true,
				cwd: global.paths.app,
				src: ['!**/*.es6', '**/*.js'],
				dest: global.paths.app
			}]
		};
		configuration.add_comment.serverGeneratedFiles = {
			options: {
				comments: ['Autogenerated, do not edit. All changes will be undone.', new Date()],
				prepend: true,
				syntaxes: {
					'.js': ['/*', '*/'],
					'.css': ['/*', '*/']
				}
			},
			files: [{
				expand: true,
				cwd: global.paths.server,
				src: ['!**/*.es6', '**/*.js',],
				dest: global.paths.server
			}]
		};
		configuration.add_comment.webSrcGeneratedFiles = {
			options: {
				comments: ['Autogenerated, do not edit. All changes will be undone.', new Date()],
				prepend: true,
				syntaxes: {
					'.js': ['/*', '*/'],
					'.css': ['/*', '*/']
				}
			},
			files: [{
				expand: true,
				cwd: global.paths.webSrc,
				src: ['!**/*.es6', '!**/*.scss', '!**/*.jade', '**/*.js', '**/*.css', '!assets/javascripts/libraries/**/*'],
				dest: global.paths.webSrc
			}]
		};
		configuration.add_comment.dist = {
			options: {
				comments: ['Autogenerated, do not edit. All changes will be undone.', new Date()],
				prepend: true,
				syntaxes: {
					'.js': ['/*', '*/'],
					'.css': ['/*', '*/'],
					'.jade': ['//-'],
					'.tpl.jade': ['//-']
				}
			},
			files: [{
				expand: true,
				cwd: global.paths.webDist,
				src: ['**/*.jade', '**/*.js', '**/*.css', '!assets/javascripts/libraries/**/*'],
				dest: global.paths.webDist
			}]
		};
		configuration.add_comment.watch = {
			options: {
				comments: ['Autogenerated, do not edit. All changes will be undone.', new Date()],
				prepend: true,
				syntaxes: {
					'.js': ['/*', '*/'],
					'.css': ['/*', '*/'],
					'.jade': ['//-'],
					'.tpl.jade': ['//-']
				}
			},
			files: [{
				expand: true,
				cwd: '',
				src: '',
				dest: ''
			}]
		};
		if(grunt.option.pathInfos)
			configuration.add_comment.generatedFromTarget = {
				options: {
					comments: ['Autogenerated, do not edit. All changes will be undone.', new Date()],
					prepend: true,
					syntaxes: {
						'.js': ['/*', '*/'],
						'.css': ['/*', '*/']
					}
				},
				files: [{
					expand: true,
					cwd: global.paths.app,
					src: grunt.option.pathInfos.pathFromApp.replace('.es6', '.js'),
					dest: global.paths.app
				}, {
					expand: true,
					cwd: global.paths.server,
					src: grunt.option.pathInfos.pathFromServer.replace('.es6', '.js'),
					dest: global.paths.server
				}, {
					expand: true,
					cwd: global.paths.webSrc,
					src: grunt.option.pathInfos.pathFromWebSrc.replace('.es6', '.js'),
					dest: global.paths.webSrc
				}]
			};

	/*CLEAN*/
		configuration.clean = {};
		configuration.clean.allGeneratedFiles = {
			files: [{
				expand: true,
				cwd: global.paths.app,
				src: ['!**/*.es6', '**/*.js'],
				dest: global.paths.app
			}, {
				expand: true,
				cwd: global.paths.server,
				src: ['!**/*.es6', '**/*.js'],
				dest: global.paths.server
			}, {
				expand: true,
				cwd: global.paths.webSrc,
				src: ['**/*.js', '**/*.js.map', '**/*.css', '**/*.css.map', '!**/*.es6', '!assets/javascripts/libraries/**/*'],
				dest: global.paths.webSrc
			}, {
				expand: true,
				cwd: '',
				src: ['doc', global.paths.webDist],
				dest: ''
			}]
		};
		configuration.clean.appGeneratedFiles = {
			files: [{
				expand: true,
				cwd: global.paths.app,
				src: ['!**/*.es6', '**/*.js'],
				dest: global.paths.app
			}]
		};
		configuration.clean.serverGeneratedFiles = {
			files: [{
				expand: true,
				cwd: global.paths.server,
				src: ['!**/*.es6', '**/*.js'],
				dest: global.paths.server
			}]
		};
		configuration.clean.webSrcGeneratedFiles = {
			files: [{
				expand: true,
				cwd: global.paths.webSrc,
				src: ['**/*.js', '**/*.js.map', '**/*.css', '**/*.css.map', '!**/*.es6', '!assets/javascripts/libraries/**/*'],
				dest: global.paths.webSrc
			}]
		};
		configuration.clean.allGeneratedJSFiles = {
			files: [{
				expand: true,
				cwd: global.paths.app,
				src: ['!**/*.es6', '**/*.js'],
				dest: global.paths.app
			}, {
				expand: true,
				cwd: global.paths.server,
				src: ['!**/*.es6', '**/*.js'],
				dest: global.paths.server
			}, {
				expand: true,
				cwd: global.paths.webSrc,
				src: ['**/*.js', '**/*.js.map', '!**/*.es6', '!assets/javascripts/libraries/**/*'],
				dest: global.paths.webSrc
			}]
		};
		configuration.clean.allGeneratedCSSFiles = {
			files: [{
				expand: true,
				cwd: global.paths.webSrc,
				src: ['**/*.css', '**/*.css.map'],
				dest: global.paths.webSrc
			}]
		};
		configuration.clean.webDist = {
			files: [{
				expand: true,
				cwd: global.paths.webRoot,
				src: ['dist'],
				dest: global.paths.webRoot
			}]
		};
		configuration.clean.watch = {
			files: [{
				expand: true,
				cwd: '',
				src: '',
				dest: ''
			}]
		};
		configuration.clean.doc = {
			files: [{
				expand: true,
				cwd: '',
				src: ['doc'],
				dest: ''
			}]
		};

		if(grunt.option.pathInfos) {
			configuration.clean.generatedFromTarget = {
				files: [{
					expand: true,
					cwd: global.paths.app,
					ext: '.js',
					src: [
						grunt.option.pathInfos.pathFromApp.replace('.es6', '.js'),
						grunt.option.pathInfos.pathFromApp.replace('.es6', '.js') + '.map'				
					],
					dest: global.paths.app
				}, {
					expand: true,
					cwd: global.paths.server,
					ext: '.js',
					src: [
						grunt.option.pathInfos.pathFromServer.replace('.es6', '.js'),
						grunt.option.pathInfos.pathFromServer.replace('.es6', '.js') + '.map'				
					],
					dest: global.paths.server
				}, {
					expand: true,
					cwd: global.paths.webSrc,
					ext: '.js',
					src: ~grunt.option.pathInfos.pathFromWebSrc.indexOf('.es6') ? [
						grunt.option.pathInfos.pathFromWebSrc.replace('.es6', '.js'),
						grunt.option.pathInfos.pathFromWebSrc.replace('.es6', '.js') + '.map'				
					] : [
						grunt.option.pathInfos.pathFromWebSrc.replace('.scss', '.css'),
						grunt.option.pathInfos.pathFromWebSrc.replace('.scss', '.css') + '.map'
					],
					dest: global.paths.webSrc
				}]
			};
		}

	/*APIDOC*/
		configuration.apidoc = {
			app: {
				src: global.paths.server,
				dest: 'doc/',
				options: {
					includeFilters: ['.*\.js$'],
					excludeFilters: ['^\_.*\.js$'],
					marked: {
						gfm: true
					}
				}
			}
		};

	/*COPY*/
		configuration.copy = {};
		configuration.copy.webSrcFontsToWebDist = {
			files: [
				{
					expand: true,
					cwd: global.paths.webSrc + '/assets/fonts',
					src: ['**'],
					dest: global.paths.webDist + '/assets/fonts'
				}
			]
		};
		configuration.copy.webSrcImagesToWebDist = {
			files: [
				{
					expand: true,
					cwd: global.paths.webSrc + '/assets/images',
					src: ['**', '!**/sprite_sources/**'],
					dest: global.paths.webDist + '/assets/images'
				}
			]
		};

	return configuration;
}